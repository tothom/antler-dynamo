{
  "Uuid": "44454478-ded6-422f-aefb-900a7c10162b",
  "IsCustomNode": true,
  "Category": "Antler.View",
  "Description": "Sets annotation crop offset for given view. Offset in model space units.",
  "Name": "View.SetAnnotationCropOffset",
  "ElementResolver": {
    "ResolutionMap": {
      "Math": {
        "Key": "DSCore.Math",
        "Value": "DSCoreNodes.dll"
      },
      "Vector": {
        "Key": "Autodesk.DesignScript.Geometry.Vector",
        "Value": "ProtoGeometry.dll"
      },
      "DSCore.List": {
        "Key": "DSCore.List",
        "Value": "DSCoreNodes.dll"
      },
      "Points": {
        "Key": "Geometry.Points",
        "Value": "LunchBox.dll"
      },
      "Autodesk.Point": {
        "Key": "Autodesk.DesignScript.Geometry.Point",
        "Value": "ProtoGeometry.dll"
      },
      "Autodesk.DesignScript.Geometry.Point": {
        "Key": "Autodesk.DesignScript.Geometry.Point",
        "Value": "ProtoGeometry.dll"
      },
      "Rectangle": {
        "Key": "Autodesk.DesignScript.Geometry.Rectangle",
        "Value": "ProtoGeometry.dll"
      },
      "Curves.cu": {
        "Key": "Geometry.Curves",
        "Value": "LunchBox.dll"
      },
      "FamilyInstance.FacingFlipped": {
        "Key": "Revit.Elements.FamilyInstance",
        "Value": "RevitNodes.dll"
      },
      "View": {
        "Key": "Revit.Elements.Views.View",
        "Value": "RevitNodes.dll"
      }
    }
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Enable Python support and load DesignScript library\r\nimport clr\r\n\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# Import RevitAPI\r\nclr.AddReference(\"RevitAPI\")\r\nfrom Autodesk.Revit.DB import *\r\n\r\n# Import DocumentManager and TransactionManager\r\nclr.AddReference(\"RevitServices\")\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\nfrom RevitServices.Transactions import TransactionManager\r\n\r\nclr.AddReference('RevitNodes')\r\nimport Revit\r\nclr.ImportExtensions(Revit.GeometryConversion)\r\nclr.ImportExtensions(Revit.Elements)\r\n\r\n#The inputs to this node will be stored as a list in the IN variables.\r\nviews = IN[0]\r\ntop = IN[1]\r\nbottom = IN[2]\r\nleft = IN[3]\r\nright = IN[4]\r\n\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\nuiapp = DocumentManager.Instance.CurrentUIApplication\r\napp = uiapp.Application\r\n\r\ndef set_annotation_crop_shape(view):\r\n\t# Converts offset to internal units and multiplies by scale to set offset in model units\r\n\tcrop_offset = UnitUtils.ConvertToInternalUnits(crop_offset, DisplayUnitType.DUT_MILLIMETERS) / view.Scale\t\r\n\t\r\n\tif view:\r\n\t\tcrop_manager = view.GetCropRegionShapeManager()\r\n\t\t\r\n\t\tcrop_manager.TopAnnotationCropOffset = top\r\n\t\tcrop_manager.BottomAnnotationCropOffset = bottom\r\n\t\tcrop_manager.LeftAnnotationCropOffset = left\r\n\t\tcrop_manager.RightAnnotationCropOffset = right\r\n\t\t\r\n\t\treturn view\r\n\r\noutput = None\r\n#crop_offset = crop_offset or 0.1\r\n\r\n# Start Transaction\r\nTransactionManager.Instance.EnsureInTransaction(doc)\r\n\r\n# Transaction\r\n# To handle single items or lists..\r\n\r\nif isinstance(views, list):\r\n\toutput = [set_annotation_crop_shape(view) for view in UnwrapElement(views)]\r\nelse:\r\n\toutput = set_annotation_crop_shape(UnwrapElement(views))\r\n\r\n# End Transaction\r\nTransactionManager.Instance.TransactionTaskDone()\r\n\r\n#Assign your output to the OUT variable.\r\nOUT = views",
      "VariableInputPorts": true,
      "Id": "80150c75353a4f53bde2d96d2d9ffa59",
      "Inputs": [
        {
          "Id": "78435c5c7d2343a0a7d41817b9c6c9e6",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "396fdb02fd544dae85cffee7db11ded1",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "485d939dec2d4885a3fd929e6a3d21d3",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "008c9f1fdc1847bb81ac345c138fb384",
          "Name": "IN[3]",
          "Description": "Input #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9750a2ceb6c24bf8a2a626b5a1029818",
          "Name": "IN[4]",
          "Description": "Input #4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "200698637b304ce78916c9d5485c35e4",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Output, DynamoCore",
      "NodeType": "OutputNode",
      "ElementResolver": null,
      "Symbol": "view",
      "Id": "b38f56cd35b54905bccea2a9e5677d57",
      "Inputs": [
        {
          "Id": "40bbed7907b84e7eae4c8e54efbcc51c",
          "Name": "",
          "Description": "",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [],
      "Replication": "Disabled",
      "Description": "A function output, use with custom nodes"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "view",
        "TypeName": "Revit.Elements.Views.View",
        "TypeRank": 0,
        "DefaultValue": null,
        "Description": ""
      },
      "Id": "38804c87f9c64c6a8cd5e43f12e668cc",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "3b913e96415f4d8f90216be648728984",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "top",
        "TypeName": "double",
        "TypeRank": 0,
        "DefaultValue": "10",
        "Description": ""
      },
      "Id": "5a13644fc6264278b98e5e7c5c6a23f5",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "88470cfc4dfc4d32a2bf2bb2dec31fb2",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "bottom",
        "TypeName": "double",
        "TypeRank": 0,
        "DefaultValue": "10",
        "Description": ""
      },
      "Id": "0218ae5abfa44a42901d44f779f42e52",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "d0c75ec314364f498378dd6b8cc24597",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "left",
        "TypeName": "double",
        "TypeRank": 0,
        "DefaultValue": "10",
        "Description": ""
      },
      "Id": "2ff0e59157544b48b5313325c5fbe06b",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "db21ffbeab4c4d4fa2a3a2d0c397a3ac",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "right",
        "TypeName": "double",
        "TypeRank": 0,
        "DefaultValue": "10",
        "Description": ""
      },
      "Id": "01059be7f4b343ea99bf01c9a967d641",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "fe27e31d2f1149d5b8d21a9e7c80145a",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Enable Python support and load DesignScript library\r\nimport clr\r\n\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# Import RevitAPI\r\nclr.AddReference(\"RevitAPI\")\r\nfrom Autodesk.Revit.DB import *\r\n\r\n# Import DocumentManager and TransactionManager\r\nclr.AddReference(\"RevitServices\")\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\nfrom RevitServices.Transactions import TransactionManager\r\n\r\nclr.AddReference('RevitNodes')\r\nimport Revit\r\nclr.ImportExtensions(Revit.GeometryConversion)\r\nclr.ImportExtensions(Revit.Elements)\r\n\r\n#The inputs to this node will be stored as a list in the IN variables.\r\nviews = IN[0]\r\ntop = IN[1]\r\nbottom = IN[2]\r\nleft = IN[3]\r\nright = IN[4]\r\n\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\nuiapp = DocumentManager.Instance.CurrentUIApplication\r\napp = uiapp.Application\r\n\r\n\r\n\r\ndef set_annotation_crop_shape(view, top, bottom, left, right):\r\n\t# Converts offset to internal units and multiplies by scale to set offset in model units\r\n\ttop = UnitUtils.ConvertToInternalUnits(top, DisplayUnitType.DUT_MILLIMETERS) / view.Scale\r\n\t\r\n\tbottom = UnitUtils.ConvertToInternalUnits(bottom, DisplayUnitType.DUT_MILLIMETERS) / view.Scale\r\n\t\r\n\tleft = UnitUtils.ConvertToInternalUnits(left, DisplayUnitType.DUT_MILLIMETERS) / view.Scale\r\n\t\r\n\tright = UnitUtils.ConvertToInternalUnits(right, DisplayUnitType.DUT_MILLIMETERS) / view.Scale\r\n\t\r\n\t\r\n\tif view:\r\n\t\tcrop_manager = view.GetCropRegionShapeManager()\r\n\t\t\r\n\t\tcrop_manager.TopAnnotationCropOffset = top\r\n\t\tcrop_manager.BottomAnnotationCropOffset = bottom\r\n\t\tcrop_manager.LeftAnnotationCropOffset = left\r\n\t\tcrop_manager.RightAnnotationCropOffset = right\r\n\t\t\r\n\t\treturn view\r\n\r\noutput = None\r\n#crop_offset = crop_offset or 0.1\r\n\r\n# Start Transaction\r\nTransactionManager.Instance.EnsureInTransaction(doc)\r\n\r\n# Transaction\r\n# To handle single items or lists..\r\n\r\nif isinstance(views, list):\r\n\toutput = [set_annotation_crop_shape(view, top, bottom, left, right) for view in UnwrapElement(views)]\r\nelse:\r\n\toutput = set_annotation_crop_shape(UnwrapElement(views), top, bottom, left, right)\r\n\r\n# End Transaction\r\nTransactionManager.Instance.TransactionTaskDone()\r\n\r\n#Assign your output to the OUT variable.\r\nOUT = views",
      "VariableInputPorts": true,
      "Id": "e14b80beb95947229e03ea30be8866cd",
      "Inputs": [
        {
          "Id": "f525da6c08f04801a51f60827a536be4",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4435bb7ee9f940afa2dff2219354801b",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d7846973cc074204857529a9fb675852",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e62211b750a54f53beca413a387aecdf",
          "Name": "IN[3]",
          "Description": "Input #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "516956a040a04857ba59d24b9fb0069f",
          "Name": "IN[4]",
          "Description": "Input #4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "eed4db2e923f438aa88a93fdb1e73c79",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    }
  ],
  "Connectors": [
    {
      "Start": "3b913e96415f4d8f90216be648728984",
      "End": "f525da6c08f04801a51f60827a536be4",
      "Id": "f3d4898e0cd44c5aa67c8bd45e339800"
    },
    {
      "Start": "88470cfc4dfc4d32a2bf2bb2dec31fb2",
      "End": "4435bb7ee9f940afa2dff2219354801b",
      "Id": "279912ba155a437b94c6899d8086585d"
    },
    {
      "Start": "d0c75ec314364f498378dd6b8cc24597",
      "End": "d7846973cc074204857529a9fb675852",
      "Id": "912d7ddf417d4157a604e69e7dbd8375"
    },
    {
      "Start": "db21ffbeab4c4d4fa2a3a2d0c397a3ac",
      "End": "e62211b750a54f53beca413a387aecdf",
      "Id": "9a4d4b7db29140069d39017410bac456"
    },
    {
      "Start": "fe27e31d2f1149d5b8d21a9e7c80145a",
      "End": "516956a040a04857ba59d24b9fb0069f",
      "Id": "8f4868356f7446f3b4ded3d6aaccf674"
    },
    {
      "Start": "eed4db2e923f438aa88a93fdb1e73c79",
      "End": "40bbed7907b84e7eae4c8e54efbcc51c",
      "Id": "219f071dfece4d30a07cd7aa78ef5a3b"
    }
  ],
  "Dependencies": [],
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": false,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.0.2.6826",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": -4294.6179051010495,
      "EyeY": 1542.5103544276171,
      "EyeZ": -60448.888681842225,
      "LookX": 1009.8598010588157,
      "LookY": -8279.9703016450549,
      "LookZ": 6.2753472527110716,
      "UpX": 0.9435902883124524,
      "UpY": 0.33106341788493659,
      "UpZ": 0.005863543352536073
    },
    "NodeViews": [
      {
        "ShowGeometry": false,
        "Name": "Python Script",
        "Id": "80150c75353a4f53bde2d96d2d9ffa59",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 271.05135776077475,
        "Y": 22.503175537379946
      },
      {
        "ShowGeometry": true,
        "Name": "Output",
        "Id": "b38f56cd35b54905bccea2a9e5677d57",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 485.73988885957408,
        "Y": -14.518177766051565
      },
      {
        "ShowGeometry": true,
        "Name": "Input",
        "Id": "38804c87f9c64c6a8cd5e43f12e668cc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -149.28562776273208,
        "Y": -41.386714504333526
      },
      {
        "ShowGeometry": true,
        "Name": "Input",
        "Id": "5a13644fc6264278b98e5e7c5c6a23f5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -86.273412411840411,
        "Y": 23.28879244521832
      },
      {
        "ShowGeometry": true,
        "Name": "Input",
        "Id": "0218ae5abfa44a42901d44f779f42e52",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -73.816994476931143,
        "Y": 94.828323514701282
      },
      {
        "ShowGeometry": true,
        "Name": "Input",
        "Id": "2ff0e59157544b48b5313325c5fbe06b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -79.061081131285334,
        "Y": 162.90103457890743
      },
      {
        "ShowGeometry": true,
        "Name": "Input",
        "Id": "01059be7f4b343ea99bf01c9a967d641",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -69.786990019587847,
        "Y": 237.50692563783696
      },
      {
        "ShowGeometry": false,
        "Name": "Python Script",
        "Id": "e14b80beb95947229e03ea30be8866cd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 284.38935834086112,
        "Y": 219.82433277332245
      }
    ],
    "Annotations": [],
    "X": 67.978847716859718,
    "Y": 176.87216011161237,
    "Zoom": 1.164389808056264
  }
}