{
  "Uuid": "cbb2d777-da74-425b-96af-8c50f285b487",
  "IsCustomNode": true,
  "Category": "Antler.String",
  "Description": "Returns best matches from string list of given word. Uses the Python difflib library for comparing sequenses.",
  "Name": "String.BestMatches",
  "ElementResolver": {
    "ResolutionMap": {}
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Enable Python support and load DesignScript library\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nimport sys\r\npath = r\"C:\\Program Files (x86)\\IronPython 2.7\\Lib\"\r\nif not path in sys.path: sys.path.append(path)\r\nimport difflib\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\npossibilites = IN[0]\r\nword = IN[1]\r\nn = IN[2]\r\ncutoff = IN[3]\r\n\r\n# Place your code below this line\r\nclose_matches = difflib.get_close_matches(word, possibilites, n=n, cutoff=cutoff)\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = close_matches",
      "VariableInputPorts": true,
      "Id": "1e11938f1e8b49b8b07866feb4d404b4",
      "Inputs": [
        {
          "Id": "f6e7cbaf3a0c48be987a480af34c8f18",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "71612f08bb7e418c8ba486360ae04dde",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a158f002e49848f0931a5c0f8d2f27b8",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8f6d6b3e160c482db64608aee15deb2b",
          "Name": "IN[3]",
          "Description": "Input #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4c05125e8ca7428d8a020c6630cedc59",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "possibilites",
        "TypeName": "var",
        "TypeRank": -1,
        "DefaultValue": null,
        "Description": " List of strings to fint best matches in "
      },
      "Id": "6ffd06a052e54e10b48f31481c8c1d8d",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "249190555d254106a490dd34dc6c5156",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "word",
        "TypeName": "var",
        "TypeRank": -1,
        "DefaultValue": null,
        "Description": " String to search with"
      },
      "Id": "1da5d46f127a4744b6cff8063896cf5e",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "19e53cb863ad43c993f7b74b5ffa82d6",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "n",
        "TypeName": "int",
        "TypeRank": 0,
        "DefaultValue": "3",
        "Description": " Maximum number of matches"
      },
      "Id": "8a100d03dc8746ef95fc001502e2dc7f",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "c5834d092d8641698962b6dd2c570585",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "cutoff",
        "TypeName": "double",
        "TypeRank": 0,
        "DefaultValue": "0.6",
        "Description": " Match ratio minimum cutoff value"
      },
      "Id": "2726590244e54c5b8865d5376b8a0607",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "ddb3c4bb6a6b4f36b26387e68fd8a2e5",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Output, DynamoCore",
      "NodeType": "OutputNode",
      "ElementResolver": null,
      "Symbol": "// List of best matches from possibilities\r\nbest_matches",
      "Id": "b1199d7ee9c74a3486f90c8857a6dc88",
      "Inputs": [
        {
          "Id": "162cab4d6bf74cd4b3f6bc329a148640",
          "Name": "",
          "Description": "",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [],
      "Replication": "Disabled",
      "Description": "A function output, use with custom nodes"
    }
  ],
  "Connectors": [
    {
      "Start": "4c05125e8ca7428d8a020c6630cedc59",
      "End": "162cab4d6bf74cd4b3f6bc329a148640",
      "Id": "af23e40ed3e94f50800a79cf18e0ab53"
    },
    {
      "Start": "249190555d254106a490dd34dc6c5156",
      "End": "f6e7cbaf3a0c48be987a480af34c8f18",
      "Id": "6ea57117e95f4d5aa035ac6f0625192b"
    },
    {
      "Start": "19e53cb863ad43c993f7b74b5ffa82d6",
      "End": "71612f08bb7e418c8ba486360ae04dde",
      "Id": "74928438e1b347dd84e8b05482e8a76e"
    },
    {
      "Start": "c5834d092d8641698962b6dd2c570585",
      "End": "a158f002e49848f0931a5c0f8d2f27b8",
      "Id": "e92b71954ca54da68109d850430f8c3b"
    },
    {
      "Start": "ddb3c4bb6a6b4f36b26387e68fd8a2e5",
      "End": "8f6d6b3e160c482db64608aee15deb2b",
      "Id": "41d60b99c4c34779b8b42076f24a7627"
    }
  ],
  "Dependencies": [],
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": false,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.0.2.6826",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": -17.0,
      "EyeY": 24.0,
      "EyeZ": 50.0,
      "LookX": 12.0,
      "LookY": -13.0,
      "LookZ": -58.0,
      "UpX": 0.0,
      "UpY": 1.0,
      "UpZ": 0.0
    },
    "NodeViews": [
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "1e11938f1e8b49b8b07866feb4d404b4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 228.04219675032255,
        "Y": 139.21247260295544
      },
      {
        "ShowGeometry": true,
        "Name": "Input",
        "Id": "6ffd06a052e54e10b48f31481c8c1d8d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -339.90679430500785,
        "Y": 10.100589494851661
      },
      {
        "ShowGeometry": true,
        "Name": "Input",
        "Id": "1da5d46f127a4744b6cff8063896cf5e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -203.76841415700727,
        "Y": 87.639838770915887
      },
      {
        "ShowGeometry": true,
        "Name": "Input",
        "Id": "8a100d03dc8746ef95fc001502e2dc7f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -221.33465675674944,
        "Y": 214.36456732625766
      },
      {
        "ShowGeometry": true,
        "Name": "Input",
        "Id": "2726590244e54c5b8865d5376b8a0607",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -261.29785867116254,
        "Y": 314.300775916993
      },
      {
        "ShowGeometry": true,
        "Name": "Output",
        "Id": "b1199d7ee9c74a3486f90c8857a6dc88",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 513.12207386850935,
        "Y": 143.60403325289099
      }
    ],
    "Annotations": [],
    "X": 40.710596598157167,
    "Y": -6.8635881203169333,
    "Zoom": 1.0120421414445722
  }
}