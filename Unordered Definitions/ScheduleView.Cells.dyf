{
  "Uuid": "210bf6cf-138d-4e50-9dcc-96633bec46a2",
  "IsCustomNode": true,
  "Category": "Antler.ScheduleView.Query",
  "Description": "Gets all cells in schedule",
  "Name": "ScheduleView.Cells",
  "ElementResolver": {
    "ResolutionMap": {}
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "#Copyright 2016. All rights reserved. Bimorph Consultancy LTD, 5 St Johns Lane, London EC1M 4BH www.bimorph.co.uk\n#Written by Thomas Mahon @Thomas__Mahon info@bimorph.co.uk\n\nimport clr\nclr.AddReference('ProtoGeometry')\nfrom Autodesk.DesignScript.Geometry import *\n\n# Import DocumentManager and TransactionManager\nclr.AddReference(\"RevitServices\")\nimport RevitServices\nfrom RevitServices.Persistence import DocumentManager\nfrom RevitServices.Transactions import TransactionManager\nfrom System.Collections.Generic import *\n#\n# Import RevitAPI\nclr.AddReference(\"RevitAPI\")\nimport Autodesk\nfrom Autodesk.Revit.DB import *\n\ndoc = DocumentManager.Instance.CurrentDBDocument\nuiapp = DocumentManager.Instance.CurrentUIApplication\napp = uiapp.Application\n\nschedule = UnwrapElement(IN[0])\n\n# \"Start\" the transaction\n#TransactionManager.Instance.EnsureInTransaction(doc)\n\t\t\n#count the number of rows and columns in the schedule\ntable = schedule.GetTableData().GetSectionData(SectionType.Body)\nnRows = table.NumberOfRows\nnColumns = table.NumberOfColumns\n\n#Collect all of data from the schedule\ndataListRow = []\nfor row in range(nRows): #Iterate through the rows. The second row is always a blank space\n\tdataListColumn = []\n\tfor column in range(nColumns): #Iterate through the columns\n\t\tdataListColumn.Add( TableView.GetCellText(schedule, SectionType.Body, row, column) )\n\tdataListRow.Add( dataListColumn )\n\n# \"End\" the transaction\n#TransactionManager.Instance.TransactionTaskDone()\n\nOUT = dataListRow",
      "VariableInputPorts": true,
      "Id": "7e692a10b1b249ab89355242e514a8ad",
      "Inputs": [
        {
          "Id": "0c49d60121f341b6be7faade00faa975",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c689bf1bd4af4c18842f30fe57925ccb",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "schedule_view",
        "TypeName": "var",
        "TypeRank": -1,
        "DefaultValue": null,
        "Description": ""
      },
      "Id": "64092b554866445894ae09b6e1f37e89",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "e8ec81094b7b40cf87715c1cb8abe5e8",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Output, DynamoCore",
      "NodeType": "OutputNode",
      "ElementResolver": null,
      "Symbol": "cells",
      "Id": "2a22a0e0251b4b41b8ec91e48571ce77",
      "Inputs": [
        {
          "Id": "b173d160b13a4880b48105093885275a",
          "Name": "",
          "Description": "",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [],
      "Replication": "Disabled",
      "Description": "A function output, use with custom nodes"
    }
  ],
  "Connectors": [
    {
      "Start": "c689bf1bd4af4c18842f30fe57925ccb",
      "End": "b173d160b13a4880b48105093885275a",
      "Id": "ecf38fe4838c4497ac00a46ad7ac2dbb"
    },
    {
      "Start": "e8ec81094b7b40cf87715c1cb8abe5e8",
      "End": "0c49d60121f341b6be7faade00faa975",
      "Id": "e5e5d4e1462549ad9bfbd60b18b8e9c9"
    }
  ],
  "Dependencies": [],
  "NodeLibraryDependencies": [],
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": false,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.3.0.5885",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": -17.0,
      "EyeY": 24.0,
      "EyeZ": 50.0,
      "LookX": 12.0,
      "LookY": -13.0,
      "LookZ": -58.0,
      "UpX": 0.0,
      "UpY": 1.0,
      "UpZ": 0.0
    },
    "NodeViews": [
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "7e692a10b1b249ab89355242e514a8ad",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 250.0,
        "Y": 0.0
      },
      {
        "ShowGeometry": true,
        "Name": "Input",
        "Id": "64092b554866445894ae09b6e1f37e89",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 0.0,
        "Y": 0.0
      },
      {
        "ShowGeometry": true,
        "Name": "Output",
        "Id": "2a22a0e0251b4b41b8ec91e48571ce77",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 449.0,
        "Y": 0.0
      }
    ],
    "Annotations": [],
    "X": 0.0,
    "Y": 0.0,
    "Zoom": 1.0
  }
}