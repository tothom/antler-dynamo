{
  "Uuid": "3d698699-1989-4413-9e32-4b5a603dc5a6",
  "IsCustomNode": true,
  "Category": "Antler.Revit.Collect.Query",
  "Description": "Returns all instances of input filled region type or filled region type name.",
  "Name": "GetFilledRegions",
  "ElementResolver": {
    "ResolutionMap": {}
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Enable Python support and load DesignScript library\r\nimport clr\r\n\r\n# Import RevitAPI\r\nclr.AddReference(\"RevitAPI\")\r\nfrom Autodesk.Revit import DB\r\n\r\n# Import DocumentManager and TransactionManager\r\nclr.AddReference (\"RevitServices\")\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\n\r\n#The inputs to this node will be stored as a list in the IN variables.\r\nnames = IN[0]\r\n\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\n\r\ndef filled_regions_by_name_collector(name, doc=doc):\r\n    provider = DB.ParameterValueProvider(\r\n        DB.ElementId(DB.BuiltInParameter.ALL_MODEL_TYPE_NAME))\r\n        \r\n    rule = DB.FilterStringRule(\r\n        provider, DB.FilterStringEquals(), name, False)\r\n        \r\n    parameter_filter = DB.ElementParameterFilter(rule)\r\n    \r\n    collector = DB.FilteredElementCollector(doc)\r\n    collector.WhereElementIsNotElementType()\r\n    collector.OfClass(clr.GetClrType(DB.FilledRegion))\r\n    \r\n    collector.WherePasses(parameter_filter)\r\n\r\n    return collector\r\n   \r\ndef process(item):\t    \r\n\tif isinstance(item, basestring):\r\n\t\treturn filled_regions_by_name_collector(names).ToElements()\r\n\telif isinstance(UnwrapElement(item), DB.FilledRegionType):\r\n\t\treturn filled_regions_by_name_collector(item.Name).ToElements()\r\n\telif isinstance(item, list):\r\n\t\treturn [process(a) for a in item]\r\n\t\t\r\n\t\t\r\nOUT = process(names)\r\n",
      "VariableInputPorts": true,
      "Id": "619ace2f5c9d45d5b7fc151e452b0e70",
      "Inputs": [
        {
          "Id": "00da0c3adff04f41bc26809b92a8fdd3",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "250767256b6d4402876cbae717f12403",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "filled_region_type_or_name",
        "TypeName": "var",
        "TypeRank": -1,
        "DefaultValue": null,
        "Description": ""
      },
      "Id": "2720305e25eb4bfca5f012a100385727",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "9b29023521f0484886b9e13f2a04f844",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Output, DynamoCore",
      "NodeType": "OutputNode",
      "ElementResolver": null,
      "Symbol": "filled_regions",
      "Id": "4ba01546a5714d269096fa859e96a88b",
      "Inputs": [
        {
          "Id": "5f538055957a4fb2bbfaa0ea92a5f59d",
          "Name": "",
          "Description": "",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [],
      "Replication": "Disabled",
      "Description": "A function output, use with custom nodes"
    }
  ],
  "Connectors": [
    {
      "Start": "250767256b6d4402876cbae717f12403",
      "End": "5f538055957a4fb2bbfaa0ea92a5f59d",
      "Id": "4f639ec778fe4357b45704c9cd4ad759"
    },
    {
      "Start": "9b29023521f0484886b9e13f2a04f844",
      "End": "00da0c3adff04f41bc26809b92a8fdd3",
      "Id": "fec857ae6517467fb7d4d6eabdfdba7d"
    }
  ],
  "Dependencies": [],
  "NodeLibraryDependencies": [],
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": false,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.6.1.8786",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": -17.0,
      "EyeY": 24.0,
      "EyeZ": 50.0,
      "LookX": 12.0,
      "LookY": -13.0,
      "LookZ": -58.0,
      "UpX": 0.0,
      "UpY": 1.0,
      "UpZ": 0.0
    },
    "NodeViews": [
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "619ace2f5c9d45d5b7fc151e452b0e70",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 250.0,
        "Y": 0.0
      },
      {
        "ShowGeometry": true,
        "Name": "Input",
        "Id": "2720305e25eb4bfca5f012a100385727",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -107.0,
        "Y": -4.0
      },
      {
        "ShowGeometry": true,
        "Name": "Output",
        "Id": "4ba01546a5714d269096fa859e96a88b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 449.0,
        "Y": 0.0
      }
    ],
    "Annotations": [],
    "X": -258.93770700372744,
    "Y": 23.432338943082939,
    "Zoom": 2.0566802683342771
  }
}
